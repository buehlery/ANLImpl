# Ensure that there are two slot with one tic.
<slotcount>2</slotcount>
<ticsperslot>1</ticsperslot>

# Ensure that the three components are present.
<component id="EchoClient">
<component id="EchoServer">
<component id="EchoServer">

# Ensure that the topology allows EchoClient -> EchoServer,
# EchoServer -> EchoClient twice.
<topology>
  <edge>
    <from>EchoClient</from>
    <to>EchoServer</to>
  <edge>
    <from>EchoClient</from>
    <to>EchoServer</to>
  <edge>
    <from>EchoServer</from>
    <to>EchoClient</to>
  <edge>
    <from>EchoServer</from>
    <to>EchoClient</to>
</topology>

# Ensure that the intentions in the first slot are Client(SEND), Server(LISTEN).
<intention>
  <for>EchoClient</for>
    <type>SEND</type>
    <tic>0</tic>
  <for>EchoServer</for>
    <type>LST</type>
  <for>EchoServer</for>
    <type>LST</type>
</intention>

# Ensure that the result of the slot is two understood messages.
<result>
  <for>EchoClient</for>
    <type>SENT</type>
    <tic>0</tic>
  <for>EchoServer</for>
    <type>RCVD</type>
    <tic>0</tic>
  <for>EchoServer</for>
    <type>RCVD</type>
    <tic>0</tic>
</result>

# Ensure that the intentions in the next slot are Client(LISTEN), Server(SEND).
<intention>
  <for>EchoClient</for>
    <type>LST</type>
  <for>EchoServer</for>
    <type>SEND</type>
    <tic>0</tic>
  <for>EchoServer</for>
    <type>SEND</type>
    <tic>0</tic>
</intention>

# Ensure that the result of the slot is two sent messages and a collision.
<result>
  <for>EchoClient</for>
    <type>COL</type>
  <for>EchoServer</for>
    <type>SENT</type>
    <tic>0</tic>
  <for>EchoServer</for>
    <type>SENT</type>
    <tic>0</tic>
</result>
